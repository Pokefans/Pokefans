@model List<Offer>
    @using Pokefans.Data.Wifi
    @using Pokefans.Data.Pokedex
    @using Pokefans.Models
    @{
        SiteTitle = "Tauschbörse";
        SiteHeader = "Meine Angebote";
        SiteDescription = "";
        ActiveMenuKey = "trading";

        Dictionary<PokemonGeneration, string> images = new Dictionary<PokemonGeneration, string>
{
{ PokemonGeneration.Generation6, "//files.pokefans.net/images/or-as/logo-gemeinsam-klein.png" },
{ PokemonGeneration.Generation7, "//files.pokefans.net/images/sonne-mond/sonne-mond-logo-klein.png" }
};
        Dictionary<PokemonGeneration, string> names = new Dictionary<PokemonGeneration, string>
{
{ PokemonGeneration.Generation6, "Generation 6 (XY, OR/AS)" },
{ PokemonGeneration.Generation7, "Generation 7 (Sonne/Mond)" }
};
    }

    <h2>@SiteHeader</h2>

    @if (Model.Count > 0)
    {
        <ul class="list-unstyled tradinglist">
            @foreach (var offer in Model)
            {
                <li class="media">
                    <a href="@Url.Action("Details", new { id = offer.Id })"><img class="lpic" src="//files.pokefans.net/sprites/global-link/120px/@(offer.Pokemon.PokedexId.ToString()).png" /></a>
                    <div class="media-body">
                        <h3><a href="@Url.Action("Details", new { id = offer.Id })">@offer.Title</a></h3>
                        @*Pokedex url*@<a href="#">@offer.Pokemon.Name.German</a> von <a href="@Url.Map("profile/"+offer.User.Url, "user")">@offer.User.UserName</a><br />
                        @{
                            List<string> l = new List<string>();
                            l.Add(string.Format("Level {0}", offer.Level));
                            if (offer.IsShiny)
                            {
                                l.Add(string.Format("<i class=\"fa fa-star\"></i> Shiny"));
                            }
                            if (offer.Item != null)
                            {
                                l.Add(string.Format("Hält <a href=\"" + Url.Action("View", "Itemdex", new { item = offer.Item.Url }) + "\">" + offer.Item.Name + "</a>"));
                            }
                            if (offer.CheatUsed)
                            {
                                l.Add(string.Format("Cheat verwendet"));
                            }
                            if (offer.IsOriginalTrainer)
                            {
                                l.Add(string.Format("Vom Originaltrainer"));
                            }
                            if (offer.EffortValues.Any())
                            {
                                l.Add("EV-trainiert");
                            }
                            if (offer.DeterValues.Any())
                            {
                                l.Add("DV-Werte bekannt");
                            }
                            // maybe this should produce an inline list, but eh...
                        }
                        @Html.Raw(string.Join(" &bull; ", l.ToArray()))
                        <p class="d-sm-none">
                            Generation @offer.Generation
                        </p>
                    </div>
                    <img class="d-none d-md-block rpic" src="@images[offer.Generation]" alt="Generation @offer.Generation" />
                </li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-info">Die Liste deiner Angebote ist so leer wie deine Boxen - <a href="@Url.Action("AddOffer")">erstelle jetzt ein Angebot!</a></div>
    }

    @section submenu {
        @Html.Partial("_submenuPartial", new TradingSubmenuViewModel() { ActiveMenuKey = "own", SearchTerm = "" })
    }
