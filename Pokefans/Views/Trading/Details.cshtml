@model Pokefans.Data.Wifi.NormalOffer
@using Pokefans.Data.Pokedex
@using Pokefans.Models
@{
    SiteTitle = "Tauschbörse";
    SiteHeader = "Tauschbörse: Pokemon online tauschen";
    SiteDescription = "";
    ActiveMenuKey = "trading";

    Dictionary<PokemonGeneration, string> images = new Dictionary<PokemonGeneration, string>
    {
        { PokemonGeneration.Generation6, "//files.pokefans.net/images/or-as/logo-gemeinsam-klein.png" },
        { PokemonGeneration.Generation7, "//files.pokefans.net/images/sonne-mond/sonne-mond-logo-klein.png" }
    };
    Dictionary<PokemonGeneration, string> names = new Dictionary<PokemonGeneration, string>
    {
        { PokemonGeneration.Generation6, "Generation 6 (XY, OR/AS)" },
        { PokemonGeneration.Generation7, "Generation 7 (Sonne/Mond)" }
    };
}

<h2>Angebot: @Model.Title</h2>
<div class="clearfix">
    <div class="col-sm-2">
        <img src="//files.pokefans.net/sprites/global-link/120px/@(Model.Pokemon.PokedexId.ToString()).png" class="img-responsive pull-left" />
    </div>
    <div class="col-sm-10">
        <h3>@Model.Pokemon.Name.German</h3>
        <ul class="list-unstyled">
            <li>Zu tauschen auf @names[Model.Generation]</li>
            @tickcross(Model.IsOriginalTrainer, "Qualität vom Originaltrainer", "Nicht vom Originaltrainer")
            @displayIf(Model.HasPokerus, "Hat den Pokerus")
            @displayIf(Model.IsShiny, "Dieses Pokemon ist Shiny")
            @displayIf(Model.CheatUsed, "Dieses Pokemon wurde durch Cheats beeinflusst")
            @tickcross(Model.IsClone, "Dieses Pokemon wurde geklont", "Dieses Pokemon wurde nicht geklont")
            @displayIf(Model.IsEvent, "Dieses Pokemon ist ein Event-Pokemon")
            @displayIf(Model.RngUsed, "Für dieses Pokemon wurde gezielt Einfluss auf den PRNG genommen")
            @if (Model.Ability != null)
            {
                <li>Fähigkeit: @Model.Ability.Name.German</li>
            }
            <li>Level @Model.Level</li>
        </ul>
    </div>
</div>
<div class="col-xs-12">
    <p>@Model.InterestCount Interessenten <a href="#" class="btn btn-primary"><i class="fa fa-shopping-cart"></i> Ich interessiere mich für dieses Pokemon!</a></p>
    <h3>Details</h3>
    @if (Model.HasAttacks)
    {
        <p>
            Attacken:
            <ul>
                @displayAttack(Model.Attack1)
                @displayAttack(Model.Attack2)
                @displayAttack(Model.Attack3)
                @displayAttack(Model.Attack4)
            </ul>
        </p>
    }
    @if (Model.AbsoluteValues.Any() || Model.EffortValues.Any() || Model.DeterValues.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>KP</th>
                    <th>Angr</th>
                    <th>Vert</th>
                    <th>SpAngr</th>
                    <th>SpVert</th>
                    <th>Init</th>
                </tr>
            </thead>
            <tbody>
                @displayStatusvalues(Model.AbsoluteValues, "Statuswerte")
                @displayStatusvalues(Model.EffortValues, "EVs")
                @displayStatusvalues(Model.DeterValues, "DVs")
            </tbody>
        </table>
    }
    <hr />
    @Html.Raw(Model.Description)
</div>
@section sidebar {
    <h3>Über den Anbieter</h3>
    <img class="img-responsive" src="@Html.ResourceLink("user/avatare/" + Model.User.MiniAvatarFileName, "files")" />
    <strong class="size-h4"><a href="@Url.Action("View", "Profile", new { area = "user", id = Model.User.Url })">@Model.User.UserName</a></strong>
    <ul class="list-unstyled">
        <li><i class="fa fa-clock-o"></i> Registriert seit @Model.User.Registered.ToString("d.M.yyyy")</li>
        <li><i class="fa fa-list"></i>Insgesamt @ViewBag.OfferCount Angebote in der Tauschbörse</li>
        @*Forenposts*@
        @*Sonstige sinnvolle Metriken?*@
    </ul>
}

@section submenu {
    @Html.Partial("_submenuPartial", new TradingSubmenuViewModel() { ActiveMenuKey = "", SearchTerm = "" })
}

@helper tickcross(bool value, string displayText)
{
tickcross(value, displayText, displayText);
}

@helper tickcross(bool value, string displayTrue, string displayFalse)
{
    <li>
        @if (value)
        {
            <i class="fa fa-check text-success fa-lg"></i> @displayTrue
        }
        else
        {
            <i class="fa fa-times fa-lg text-danger"></i> @displayFalse
        }
    </li>
}

@helper displayAttack(Attack att)
{
if (att != null)
{
    // TODO: attackendexurl!
    <li><a href="#">@att.Name.German</a></li>
}
}

@helper displayIf(bool value, string displayText)
{
if (value)
{
        <li><i class="fa fa-check text-success fa-lg"></i> @displayText</li>
}
}

@helper displayStatusvalues(PokemonStatusvalues vals, string label)
{
if (vals.Any())
{
        <tr>
            <td>@label</td>
            <td>@vals.HP</td>
            <td>@vals.Attack</td>
            <td>@vals.Defense</td>
            <td>@vals.SpecialAttack</td>
            <td>@vals.SpecialDefense</td>
            <td>@vals.Speed</td>
        </tr>
}
}