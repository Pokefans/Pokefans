@model Pokefans.Models.TradingIndexViewModel
@using Pokefans.Data.Pokedex
@using Pokefans.Models
@{
    SiteTitle = "Tauschbörse";
    SiteHeader = "Tauschbörse: Pokemon online tauschen";
    SiteDescription = "";
    ActiveMenuKey = "trading";

    Breadcrumbs.Add("Tauschbörse");

    Dictionary<PokemonGeneration, string> images = new Dictionary<PokemonGeneration, string>
{
{ PokemonGeneration.Generation6, "//files.pokefans.net/images/or-as/logo-gemeinsam-klein.png" },
{ PokemonGeneration.Generation7, "//files.pokefans.net/images/sonne-mond/sonne-mond-logo-klein.png" }
};

}

<h1>@SiteHeader</h1>
@if (Model.TeaserContent == null)
{
    <text>Config error: teaser article not found</text>
}
else
{
    <div>@Html.Raw(Model.TeaserContent.ParsedContent)</div>
}

<h2>Angebote</h2>
<ul class="list-unstyled tradinglist">
    @foreach (var offer in Model.Offers)
    {
        <li class="media mt-3">
            <a href="@Url.Action("Details", new { id = offer.Id })"><img src="//files.pokefans.net/sprites/global-link/120px/@(offer.Pokemon.PokedexId.ToString()).png" class="lpic" /></a>
            <div class="media-body">
                <h3><a href="@Url.Action("Details", new { id = offer.Id })">@offer.Title</a></h3>
                @*Pokedex url*@<a href="#">@offer.Pokemon.Name.German</a> von @*User url*@<a href="@Url.Map("profile/"+offer.User.Url, "user")">@offer.User.UserName</a><br />
                @{
                    List<string> l = new List<string>();
                    l.Add(string.Format("Level {0}", offer.Level));
                    if (offer.IsShiny)
                    {
                        l.Add(string.Format("<i class=\"fa fa-star\"></i> Shiny"));
                    }
                    if (offer.Item != null)
                    {
                        l.Add(string.Format("Hält <a href=\"" + Url.Action("View", "Itemdex", new { item = offer.Item.Url }) + "\">" + offer.Item.Name + "</a>"));
                    }
                    if (offer.CheatUsed)
                    {
                        l.Add(string.Format("Cheat verwendet"));
                    }
                    if (offer.IsOriginalTrainer)
                    {
                        l.Add(string.Format("Vom Originaltrainer"));
                    }
                    if (offer.EffortValues.Any())
                    {
                        l.Add("EV-trainiert");
                    }
                    if (offer.DeterValues.Any())
                    {
                        l.Add("DV-Werte bekannt");
                    }
                    // maybe this should produce an inline list, but eh...
                }
                @Html.Raw(string.Join(" &bull; ", l.ToArray()))
                <p class="d-sm-none">
                    Generation @offer.Generation
                </p>
            </div>
            <img class="rpic d-none d-md-block" src="@images[offer.Generation]" alt="Generation @offer.Generation" />
        </li>
    }
</ul>

@section sidebar {
    <iframe src="https://discordapp.com/widget?id=378642358797074433&theme=dark" width="600" height="500" style="max-width:100%;" allowtransparency="true" frameborder="0"></iframe>
}

@section submenu {
    @Html.Partial("_submenuPartial", new TradingSubmenuViewModel() { ActiveMenuKey = "", SearchTerm = "" })
}