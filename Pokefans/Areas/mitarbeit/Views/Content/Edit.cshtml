@*Copyright 2015 the pokefans-core authors. See copying.md for legal info.*@
@using Pokefans.Areas.mitarbeit.Models
@model ContentEditViewModel
@{
    SiteTitle = (Model.ContentId == null) ? "Verwaltung: Inhalte - Neu" : "Verwaltung: Inhalte - Bearbeiten";
    SiteDescription = (Model.ContentId == null) ? "Neuen Artikel anlegen" : "Artikel bearbeiten";
    SiteHeader = Model.Title;
    Layout = "~/Areas/mitarbeit/Views/_Layout.cshtml";

    Breadcrumbs.Add("Mitarbeit");
    Breadcrumbs.Add("Inhalte");
    if (String.IsNullOrEmpty(Model.Title))
    {
        Breadcrumbs.Add("Neu");
    }
    else
    {
        Breadcrumbs.Add(Model.Title);
        Breadcrumbs.Add("Bearbeiten");
    }
}

<div class="row">
    <div class="col-lg-12 col-xs-12">
        @using (Html.BeginRouteForm("ContentDetail", new { contentId = Model.ContentId, action = "edit" }, FormMethod.Post, new { role = "form" }))
        {
            if (!String.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="alert alert-error alert-dismissable">@ViewBag.Error</div>
            }

            @Html.ValidationSummary(true, "Es sind Fehler aufgetreten!", new { @class = "alert alert-error alert-dismissable" })

            if (Model.Saved)
            {
                <div class="alert alert-success alert-dismissable">Der Inhalt wurde gespeichert.</div>
            }

            @Html.AntiForgeryToken()
            <input type="hidden" value="@Html.AttributeEncode(Model.ContentId)" id= id="ContentId" name="ContentId" />


            <div class="box box-primary">
                <div class="box-body">
                    <div class="row clearfix">
                        <div class="form-group col-lg-8">
                            @Html.LabelFor(c => c.Title)
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(c => c.Title, new { @class = "form-control", placeholder = "Gib hier einen aussagekräftigen Titel ein!" })
                        </div>
                        <div class="col-lg-4">
                            <button class="btn btn-success pull-right" type="submit" style="margin-top:23px;">Speichern</button>
                        </div>
                    </div>

                    <div class="pull-right">
                        <div class="btn-group">
                            <button class="btn btn-default" data-code="{pokedex: Name;[text=Angezeigter Text]}" id="ic-pokedex">Pokedex</button>
                            <button class="btn btn-default" data-code="{attacke: Name;[text=Angezeigter Text]}" id="ic-attackendex">Attackendex</button>
                            <button class="btn btn-default" data-code="{item: Name;[Angezeigter Text]}" id="ic-itemdex">Itemdex</button>
                            <button class="btn btn-default" data-code="{chara: Name;[Angezeigter Text]}" id="ic-charakteristikendex">Charakteristiken</button>
                            <button class="btn btn-default" data-code="{beere: Name;[Angezeigter Text]}" id="ic-beerendex">Beerendex</button>
                            <button class="btn btn-default" data-code="{lexikon: Name;[Angezeigter Text]}" id="ic-lexikon">Lexikon</button>
                            <button class="btn btn-default" data-code="{sprite: National-ID;[text=Angezeigter Text;][type=Spite-Typ;]}" id="ic-sprite">Sprite</button>
                            <button class="btn btn-default" data-code="{icon: National-ID;[Angezeigter Text]}" id="ic-icon">Pokemon-Icon</button>
                            <button class="btn btn-default" data-code="{icon-item:Name;}" id="ic-item-icon">Item-Icon</button>
                            <button class="btn btn-default" data-code="{icon-typ:ID;}" id="ic-typ-icon">Typ-Icon</button>
                            <button class="btn btn-default" id="ic-img" data-code="{img: Bild-URL; [Alternativer Text]}" data-toggle="tooltip" data-placement="bottom" title="Bild einfügen"><i class="fa fa-image fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-thumb" data-code="{thumb: Bild-URL; Breite; [Alternativer Text]}" data-toggle="tooltip" data-placement="bottom" title="Thumbnail einfügen"><i class="fa fa-crop fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-youtube" data-code="{youtube: Video #ID; [Beschreibung des Videos]}" data-toggle="tooltip" data-placement="bottom" title="Youtube einfügen"><i class="fa fa-youtube-play fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-abbr" data-code="{abbr: Abkürzung; Erklärung}" data-toggle="tooltip" data-placement="bottom" title="Abkürzung einfügen"><i class="fa fa-random fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-link" data-code="{link: URL; [Angezeigter Text]}" data-toggle="tooltip" data-placement="bottom" title="Link einfügen"><i class="fa fa-external-link fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-link-board" data-code="{t: Themen-#ID; Angezeigter Text}" data-toggle="tooltip" data-placement="bottom" title="Link zu einem Foren-Thema einfügen"><i class="fa fa-comments fa-lg"></i></button>
                            <button class="btn btn-default" id="ic-link-user" data-code="{user: Mitglieds-#ID; text=Angezeigter Text}" data-toggle="tooltip" data-placement="bottom" title="Link zu einem Benutzer einfügen"><i class="fa fa-user fa-lg"></i></button>
                        </div>
                    </div>

                    <div role="tabpanel" id="editors">
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active"><a href="#html" aria-controls="html" role="tab" data-toggle="tab">HTML</a></li>
                            <li role="presentation"><a href="#css" aria-controls="css" role="tab" data-toggle="tab">CSS</a></li>
                        </ul>

                        <div class="tab-content">
                            <div role="tabpanel" class="editorhost tab-pane active" id="html">
                                <div class="form-group">
                                    @Html.LabelFor(c => c.UnparsedContent, new { id = "html-label" })
                                    @Html.ValidationMessageFor(m => m.UnparsedContent, "", new { @class = "text-danger" })
                                    @Html.TextAreaFor(c => c.UnparsedContent, new { @class = "form-control content-editor", placeholder = "Gib hier den Inhalt ein!", id = "editorContent", data_editor = "html" })
                                </div>
                            </div>
                            <div role="tabpanel" class="editorhost tab-pane" id="css">
                                <div class="form-group">
                                    @Html.LabelFor(c => c.StylesheetCode, new { id = "css-label" })
                                    @Html.ValidationMessageFor(m => m.StylesheetCode, "", new { @class = "text-danger" })
                                    @Html.TextAreaFor(c => c.StylesheetCode, new { @class = "form-control description-editor", placeholder = "Gib hier dein persönliches Stylesheet ein!", data_editor = "less" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="clearfix" style="margin-bottom: 5px;">
                        <div class="btn-group pull-left" data-toggle="buttons">
                            <label class="btn btn-primary active" id="switch-tabbed">
                                <input type="radio" name="options" id="tabbed" autocomplete="off" checked> Tabs
                            </label>
                            <label class="btn btn-primary visible-lg" id="switch-sidebyside">
                                <input type="radio" name="options" id="sidebyside" autocomplete="off"> Nebeneinander
                            </label>
                            <label class="btn btn-primary" id="switch-stacked">
                                <input type="radio" name="options" id="stacked" autocomplete="off"> Übereinander
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="box box-primary">
                <div class="box-header">
                    <button class="btn btn-success pull-right" type="submit">Speichern</button>

                    <h3 class="box-title">Beschreibungen und Zusammenfassungen</h3>
                </div>

                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(c => c.Description)
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        @Html.TextAreaFor(c => c.Description, new { @class = "form-control", placeholder = "Gib hier eine kurze Beschreibung ein!", rows = 2, cols = 60 })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Teaser)
                        @Html.ValidationMessageFor(m => m.Teaser, "", new { @class = "text-danger" })
                        @Html.TextAreaFor(c => c.Teaser, new { @class = "form-control", placeholder = "Gib hier eine kurze Zusammenfassung ein!", rows = 4, cols = 60 })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.Notes)
                        @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                        @Html.TextAreaFor(c => c.Notes, new { @class = "form-control", placeholder = "Hier kannst du Notizen eintragen.", rows = 5, cols = 60 })
                    </div>
                </div>
            </div>

            <div class="box box-primary">
                <div class="box-header">
                    <button class="btn btn-success pull-right" type="submit">Speichern</button>

                    <h3 class="box-title">Weitere Optionen</h3>
                </div>

                <div class="box-body">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(c => c.Status)
                        @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                        @(Model.IsContentAdministrator ? Html.EnumDropDownListFor(c => c.Status, new { @class = "form-control" }) : Html.DropDownListFor(c => c.Status, Model.ContentStatusList, new { @class = "form-control" }))
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(c => c.Type)
                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                        @Html.EnumDropDownListFor(c => c.Type, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(c => c.CategoryId)
                        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                        @Html.DropDownListFor(c => c.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
                    </div>
                    @if (Model.IsContentAdministrator)
                    {
                        <div class="form-group col-md-6">
                            @Html.LabelFor(c => c.HomePageOptions)
                            @Html.ValidationMessageFor(m => m.HomePageOptions, "", new { @class = "text-danger" })
                            @Html.EnumDropDownListFor(c => c.HomePageOptions, new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(c => c.PermissionId)
                            @Html.ValidationMessageFor(m => m.PermissionId, "", new { @class = "text-danger" })
                            @Html.DropDownListFor(c => c.PermissionId, Model.ContentPermissionList, "(keine)", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(c => c.Url)
                            @Html.ValidationMessageFor(m => m.Url, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(c => c.Url, new { @class = "form-control" })
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/ace")
}
@section ContentSubMenu {
    @Html.Partial("~/Areas/mitarbeit/Views/Shared/_ContentMenuPartial.cshtml", new ContentMenuModel { Active = ContentMenuViewType.Edit, Id = Model.ContentId })
}